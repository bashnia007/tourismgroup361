//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Tourism.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class MonumentsDBEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект MonumentsDBEntities, используя строку соединения из раздела "MonumentsDBEntities" файла конфигурации приложения.
        /// </summary>
        public MonumentsDBEntities() : base("name=MonumentsDBEntities", "MonumentsDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта MonumentsDBEntities.
        /// </summary>
        public MonumentsDBEntities(string connectionString) : base(connectionString, "MonumentsDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта MonumentsDBEntities.
        /// </summary>
        public MonumentsDBEntities(EntityConnection connection) : base(connection, "MonumentsDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Monument> Monuments
        {
            get
            {
                if ((_Monuments == null))
                {
                    _Monuments = base.CreateObjectSet<Monument>("Monuments");
                }
                return _Monuments;
            }
        }
        private ObjectSet<Monument> _Monuments;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Monuments. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMonuments(Monument monument)
        {
            base.AddObject("Monuments", monument);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MonumentsDBModel", Name="Monument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Monument : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Monument.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="address">Исходное значение свойства Address.</param>
        /// <param name="architectors">Исходное значение свойства Architectors.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        public static Monument CreateMonument(global::System.Int32 id, global::System.String name, global::System.String address, global::System.String architectors, global::System.String date)
        {
            Monument monument = new Monument();
            monument.ID = id;
            monument.Name = name;
            monument.Address = address;
            monument.Architectors = architectors;
            monument.Date = date;
            return monument;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Architectors
        {
            get
            {
                return _Architectors;
            }
            set
            {
                OnArchitectorsChanging(value);
                ReportPropertyChanging("Architectors");
                _Architectors = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Architectors");
                OnArchitectorsChanged();
            }
        }
        private global::System.String _Architectors;
        partial void OnArchitectorsChanging(global::System.String value);
        partial void OnArchitectorsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();

        #endregion

    
    }

    #endregion

    
}
