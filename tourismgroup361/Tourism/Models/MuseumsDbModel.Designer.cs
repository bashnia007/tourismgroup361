//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Tourism.Models
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class MuseumsDBEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект MuseumsDBEntities, используя строку соединения из раздела "MuseumsDBEntities" файла конфигурации приложения.
        /// </summary>
        public MuseumsDBEntities() : base("name=MuseumsDBEntities", "MuseumsDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта MuseumsDBEntities.
        /// </summary>
        public MuseumsDBEntities(string connectionString) : base(connectionString, "MuseumsDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта MuseumsDBEntities.
        /// </summary>
        public MuseumsDBEntities(EntityConnection connection) : base(connection, "MuseumsDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Monument> Monuments
        {
            get
            {
                if ((_Monuments == null))
                {
                    _Monuments = base.CreateObjectSet<Monument>("Monuments");
                }
                return _Monuments;
            }
        }
        private ObjectSet<Monument> _Monuments;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Museum> Museums
        {
            get
            {
                if ((_Museums == null))
                {
                    _Museums = base.CreateObjectSet<Museum>("Museums");
                }
                return _Museums;
            }
        }
        private ObjectSet<Museum> _Museums;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Monuments. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMonuments(Monument monument)
        {
            base.AddObject("Monuments", monument);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Museums. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMuseums(Museum museum)
        {
            base.AddObject("Museums", museum);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MuseumsDBModel", Name="Monument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Monument : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Monument.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="address">Исходное значение свойства address.</param>
        /// <param name="info">Исходное значение свойства info.</param>
        /// <param name="date">Исходное значение свойства date.</param>
        public static Monument CreateMonument(global::System.Int32 id, global::System.String name, global::System.String address, global::System.String info, global::System.String date)
        {
            Monument monument = new Monument();
            monument.ID = id;
            monument.name = name;
            monument.address = address;
            monument.info = info;
            monument.date = date;
            return monument;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String info
        {
            get
            {
                return _info;
            }
            set
            {
                OninfoChanging(value);
                ReportPropertyChanging("info");
                _info = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("info");
                OninfoChanged();
            }
        }
        private global::System.String _info;
        partial void OninfoChanging(global::System.String value);
        partial void OninfoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.String _date;
        partial void OndateChanging(global::System.String value);
        partial void OndateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MuseumsDBModel", Name="Museum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Museum : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Museum.
        /// </summary>
        /// <param name="id">Исходное значение свойства ID.</param>
        /// <param name="nameRUS">Исходное значение свойства nameRUS.</param>
        /// <param name="contacts">Исходное значение свойства contacts.</param>
        /// <param name="addressRUS">Исходное значение свойства addressRUS.</param>
        public static Museum CreateMuseum(global::System.Int32 id, global::System.String nameRUS, global::System.String contacts, global::System.String addressRUS)
        {
            Museum museum = new Museum();
            museum.ID = id;
            museum.nameRUS = nameRUS;
            museum.contacts = contacts;
            museum.addressRUS = addressRUS;
            return museum;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String nameRUS
        {
            get
            {
                return _nameRUS;
            }
            set
            {
                if (_nameRUS != value)
                {
                    OnnameRUSChanging(value);
                    ReportPropertyChanging("nameRUS");
                    _nameRUS = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("nameRUS");
                    OnnameRUSChanged();
                }
            }
        }
        private global::System.String _nameRUS;
        partial void OnnameRUSChanging(global::System.String value);
        partial void OnnameRUSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String nameENG
        {
            get
            {
                return _nameENG;
            }
            set
            {
                OnnameENGChanging(value);
                ReportPropertyChanging("nameENG");
                _nameENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("nameENG");
                OnnameENGChanged();
            }
        }
        private global::System.String _nameENG;
        partial void OnnameENGChanging(global::System.String value);
        partial void OnnameENGChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String contacts
        {
            get
            {
                return _contacts;
            }
            set
            {
                if (_contacts != value)
                {
                    OncontactsChanging(value);
                    ReportPropertyChanging("contacts");
                    _contacts = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("contacts");
                    OncontactsChanged();
                }
            }
        }
        private global::System.String _contacts;
        partial void OncontactsChanging(global::System.String value);
        partial void OncontactsChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String addressRUS
        {
            get
            {
                return _addressRUS;
            }
            set
            {
                if (_addressRUS != value)
                {
                    OnaddressRUSChanging(value);
                    ReportPropertyChanging("addressRUS");
                    _addressRUS = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("addressRUS");
                    OnaddressRUSChanged();
                }
            }
        }
        private global::System.String _addressRUS;
        partial void OnaddressRUSChanging(global::System.String value);
        partial void OnaddressRUSChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String addressENG
        {
            get
            {
                return _addressENG;
            }
            set
            {
                OnaddressENGChanging(value);
                ReportPropertyChanging("addressENG");
                _addressENG = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("addressENG");
                OnaddressENGChanged();
            }
        }
        private global::System.String _addressENG;
        partial void OnaddressENGChanging(global::System.String value);
        partial void OnaddressENGChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MuseumsDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта User.
        /// </summary>
        /// <param name="e_mail">Исходное значение свойства e_mail.</param>
        /// <param name="password">Исходное значение свойства password.</param>
        /// <param name="name">Исходное значение свойства name.</param>
        public static User CreateUser(global::System.String e_mail, global::System.String password, global::System.String name)
        {
            User user = new User();
            user.e_mail = e_mail;
            user.password = password;
            user.name = name;
            return user;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String e_mail
        {
            get
            {
                return _e_mail;
            }
            set
            {
                if (_e_mail != value)
                {
                    One_mailChanging(value);
                    ReportPropertyChanging("e_mail");
                    _e_mail = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("e_mail");
                    One_mailChanged();
                }
            }
        }
        private global::System.String _e_mail;
        partial void One_mailChanging(global::System.String value);
        partial void One_mailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
    }

    #endregion

    
}
